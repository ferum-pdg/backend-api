# Configuration Base de données avec Dev Services
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.username=postgres
quarkus.datasource.devservices.password=postgres
quarkus.datasource.devservices.db-name=postgres
quarkus.datasource.devservices.port=55432

# Configuration Hibernate ORM
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.log.sql=true

# Configuration JWT
mp.jwt.verify.publickey.location=publicKey.pem
smallrye.jwt.sign.key.location=privateKey.pem
quarkus.smallrye-jwt.token.lifespan=3600
quarkus.smallrye-jwt.token.header=Authorization
quarkus.smallrye-jwt.token.cookie=jwt
mp.jwt.verify.issuer=ferum
quarkus.smallrye-jwt.enabled=true

# Configuration CORS
quarkus.http.cors.origins=http://localhost:5173
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.access-control-allow-headers=Authorization,Content-Type
quarkus.http.cors.access-control-allow-methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

# Configuration Swagger UI SEULEMENT
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api
quarkus.swagger-ui.theme=material

# Configuration OpenAPI (extraite de OpenApiConfig.java)
mp.openapi.extensions.smallrye.info.title=API ferum
mp.openapi.extensions.smallrye.info.version=1.0.0
mp.openapi.extensions.smallrye.info.description=\
  Cette API permet la gestion des seances d'entrainement (workouts), des plans d'entrainement, ainsi que l'authentification et le profil utilisateur.\
  \n\n## Fonctionnalites principales :\
  \n- Authentification (JWT) et gestion du profil\
  \n- Gestion des workouts (creation, consultation, suppression)\
  \n- Gestion des plans d'entrainement (creation et consultation)\
  \n\n## Authentification\
  \nL'API utilise un jeton JWT (schema bearer). Ajoutez `Authorization: Bearer <token>` a vos requetes.

# Configuration des serveurs OpenAPI
mp.openapi.servers=http://localhost:8080

# Configuration du schéma de sécurité Bearer JWT
mp.openapi.extensions.smallrye.securityScheme.bearerAuth.type=http
mp.openapi.extensions.smallrye.securityScheme.bearerAuth.scheme=bearer
mp.openapi.extensions.smallrye.securityScheme.bearerAuth.bearerFormat=JWT